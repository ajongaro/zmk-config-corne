#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        close_tab_window: close_tab_window {
            compatible = "zmk,behavior-tap-dance";
            label = "CLOSE_TAB_WINDOW";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp LG(W)>;
        };
    };

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>;
            label = "COPY";
        };

        span_a: span_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp A>;
            label = "SPAN_A";
        };

        span_e: span_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp E>;
            label = "SPAN_E";
        };

        span_i: span_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp I>;
            label = "SPAN_I";
        };

        span_o: span_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp O>;
            label = "SPAN_O";
        };

        span_u: span_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp U>;
            label = "SPAN_U";
        };

        span_n: span_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp N>;
            label = "SPAN_N";
        };

        paste_test: paste_test {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(V)>;
            label = "PASTE_TEST";
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(LA(NUMBER_4)))>;
            label = "SCREENSHOT";
        };

        screenshot_copy: screenshot_copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_4))>;
            label = "SCREENSHOT_COPY";
        };

        minimize: minimize {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(M)>;
            label = "MINIMIZE";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(X)>;
            label = "CUT";
        };
    };

    combos {
        compatible = "zmk,combos";

        span_a {
            bindings = <&span_a>;
            key-positions = <13 22>;
        };

        span_n {
            bindings = <&span_n>;
            key-positions = <30 22>;
        };

        span_e {
            bindings = <&span_e>;
            key-positions = <22 3>;
        };

        span_i {
            bindings = <&span_i>;
            key-positions = <22 8>;
        };

        span_o {
            bindings = <&span_o>;
            key-positions = <22 9>;
        };

        span_u {
            bindings = <&span_u>;
            key-positions = <22 7>;
        };

        screen_shot_file {
            bindings = <&screenshot>;
            key-positions = <14 15 16>;
        };

        screen_shot_copy {
            bindings = <&screenshot_copy>;
            key-positions = <15 16>;
        };

        copy {
            bindings = <&copy>;
            key-positions = <26 27>;
        };

        paste {
            bindings = <&paste_test>;
            key-positions = <27 28>;
        };

        minimize {
            bindings = <&minimize>;
            key-positions = <13 14 15 16>;
        };

        cut {
            bindings = <&cut>;
            key-positions = <25 26>;
        };

        left_side_window {
            bindings = <&kp F13>;
            key-positions = <2 14>;
        };

        maximize_window {
            bindings = <&kp F17>;
            key-positions = <3 15>;
        };

        right_side_window {
            bindings = <&kp F16>;
            key-positions = <4 16>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp TAB         &kp Q               &kp W           &kp E               &kp R         &kp T                   &kp Y      &kp U            &kp I                    &kp O              &kp P                  &kp BACKSPACE
&kp CAPS        &kp A               &kp S           &kp D               &kp F         &kp G                   &kp H      &kp J            &kp K                    &kp L              &kp SEMI               &kp SQT
&kp LEFT_SHIFT  &hm LEFT_CONTROL Z  &hm LEFT_ALT X  &hm LEFT_COMMAND C  &kp V         &kp B                   &kp N      &kp M            &hm RIGHT_COMMAND COMMA  &hm RIGHT_ALT DOT  &hm LEFT_CONTROL FSLH  &mt RSHFT ENTER
                                                    &mo 4               &lt 1 DELETE  &mt LEFT_SHIFT ENTER    &kp SPACE  &lt 2 BACKSPACE  &kp LG(GRAVE)
            >;
        };

        NAV {
            display-name = "NavNum";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp NUMBER_4     &kp NUMBER_5     &kp NUMBER_6  &kp N7    &kp N8        &kp N9     &kp N0  &trans
&trans  &trans        &kp LG(MINUS)  &kp UP        &kp LG(PLUS)     &kp PAGE_UP      &kp LEFT      &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans        &kp LEFT       &kp DOWN      &kp RIGHT_ARROW  &kp PAGE_DOWN    &trans        &trans    &trans        &trans     &trans  &trans
                                     &trans        &trans           &kp ENTER        &kp SPACE     &trans    &trans
            >;
        };

        SYM {
            display-name = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL   &kp AT            &kp HASH        &kp DLLR              &kp PRCNT    &kp CARET  &kp AMPS               &kp ASTRK        &kp PIPE   &kp BACKSLASH  &trans
&trans  &kp TILDE  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp MINUS    &kp EQUAL  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RBKT   &kp GRAVE      &trans
&trans  &trans     &kp UNDER         &kp MINUS       &kp LESS_THAN         &kp UNDER    &kp PLUS   &kp GREATER_THAN       &kp PLUS         &kp EQUAL  &kp SLASH      &trans
                                     &trans          &trans                &trans       &trans     &trans                 &trans
            >;
        };

        ADJ {
            display-name = "System";
            bindings = <
&trans  &kp F1        &kp F2          &kp F3        &kp F4      &kp F5            &kp F6          &kp F7          &kp F8        &kp F9           &kp F10      &trans
&trans  &none         &kp C_PREVIOUS  &kp C_PLAY    &kp C_NEXT  &studio_unlock    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_CLR  &bt BT_CLR_ALL    &trans          &trans          &trans        &trans           &bootloader  &trans
                                      &trans        &trans      &trans            &trans          &trans          &trans
            >;
        };

        EXTRA {
            display-name = "extra";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS   &kp N7        &kp N8        &kp N9        &kp ASTERISK   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp COLON  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_DIVIDE  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD     &trans
                        &trans  &trans  &trans    &trans     &kp N0        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
